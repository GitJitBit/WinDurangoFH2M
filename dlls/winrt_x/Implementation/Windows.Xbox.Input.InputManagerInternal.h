#pragma once
#include "Windows.Xbox.Input.InputManagerInternal.g.h"

// WARNING: This file is automatically generated by a tool. Do not directly
// add this file to your project, as any changes you make will be lost.
// This file is a stub you can use as a starting point for your implementation.
//
// To add a copy of this file to your project:
//   1. Copy this file from its original location to the location where you store 
//      your other source files (e.g. the project root). 
//   2. Add the copied file to your project. In Visual Studio, you can use 
//      Project -> Add Existing Item.
//   3. Delete this comment and the 'static_assert' (below) from the copied file.
//      Do not modify the original file.
//
// To update an existing file in your project:
//   1. Copy the relevant changes from this file and merge them into the copy 
//      you made previously.
//    
// This assertion helps prevent accidental modification of generated files.
//////////

namespace winrt::Windows::Xbox::Input::implementation
{
    struct InputManagerInternal
    {
        InputManagerInternal() = default;

        static void OverrideKinectInteractionMode(winrt::Windows::Xbox::Input::KinectInteractionMode const& mode, uint32_t durationMilliseconds);
        static void SetManipulationRect(int32_t left, int32_t top, int32_t right, int32_t bottom);
        static void SetSystemCursorAttractionRect(int32_t left, int32_t top, int32_t right, int32_t bottom);
        static void ForceGamepadCursorActivation(int32_t x, int32_t y);
        static void SetCursorPos(int32_t x, int32_t y);
    };
}
namespace winrt::Windows::Xbox::Input::factory_implementation
{
    struct InputManagerInternal : InputManagerInternalT<InputManagerInternal, implementation::InputManagerInternal>
    {
    };
}
