#include "pch.h"
#include "Microsoft.Xbox.Services.Social.Manager.SocialManager.h"
#include "Microsoft.Xbox.Services.Social.Manager.SocialManager.g.cpp"

// WARNING: This file is automatically generated by a tool. Do not directly
// add this file to your project, as any changes you make will be lost.
// This file is a stub you can use as a starting point for your implementation.
//
// To add a copy of this file to your project:
//   1. Copy this file from its original location to the location where you store 
//      your other source files (e.g. the project root). 
//   2. Add the copied file to your project. In Visual Studio, you can use 
//      Project -> Add Existing Item.
//   3. Delete this comment and the 'static_assert' (below) from the copied file.
//      Do not modify the original file.
//
// To update an existing file in your project:
//   1. Copy the relevant changes from this file and merge them into the copy 
//      you made previously.
//    
// This assertion helps prevent accidental modification of generated files.
////////

namespace winrt::Microsoft::Xbox::Services::Social::Manager::implementation
{
    winrt::Microsoft::Xbox::Services::Social::Manager::SocialManager SocialManager::SingletonInstance()
    {
        throw hresult_not_implemented();
    }
    void SocialManager::AddLocalUser(winrt::Windows::Xbox::System::User const& user, winrt::Microsoft::Xbox::Services::Social::Manager::SocialManagerExtraDetailLevel const& extraDetailLevel)
    {
        throw hresult_not_implemented();
    }
    void SocialManager::RemoveLocalUser(winrt::Windows::Xbox::System::User const& user)
    {
        throw hresult_not_implemented();
    }
    winrt::Windows::Foundation::Collections::IVectorView<winrt::Microsoft::Xbox::Services::Social::Manager::SocialEvent> SocialManager::DoWork()
    {
        throw hresult_not_implemented();
    }
    winrt::Microsoft::Xbox::Services::Social::Manager::XboxSocialUserGroup SocialManager::CreateSocialUserGroupFromFilters(winrt::Windows::Xbox::System::User const& user, winrt::Microsoft::Xbox::Services::Social::Manager::PresenceFilter const& presenceFilter, winrt::Microsoft::Xbox::Services::Social::Manager::RelationshipFilter const& relationshipFilter)
    {
        throw hresult_not_implemented();
    }
    winrt::Microsoft::Xbox::Services::Social::Manager::XboxSocialUserGroup SocialManager::CreateSocialUserGroupFromList(winrt::Windows::Xbox::System::User const& user, winrt::Windows::Foundation::Collections::IVectorView<hstring> const& xboxUserIdList)
    {
        throw hresult_not_implemented();
    }
    void SocialManager::DestroySocialUserGroup(winrt::Microsoft::Xbox::Services::Social::Manager::XboxSocialUserGroup const& xboxSocialUserGroup)
    {
        throw hresult_not_implemented();
    }
    winrt::Windows::Foundation::Collections::IVectorView<winrt::Windows::Xbox::System::User> SocialManager::LocalUsers()
    {
        throw hresult_not_implemented();
    }
    void SocialManager::UpdateSocialUserGroup(winrt::Microsoft::Xbox::Services::Social::Manager::XboxSocialUserGroup const& socialGroup, winrt::Windows::Foundation::Collections::IVectorView<hstring> const& users)
    {
        throw hresult_not_implemented();
    }
    void SocialManager::SetRichPresencePollingState(winrt::Windows::Xbox::System::User const& user, bool shouldEnablePolling)
    {
        throw hresult_not_implemented();
    }
}
