#include "pch.h"
#include "Microsoft.Xbox.Services.Statistics.Manager.StatisticManager.h"
#include "Microsoft.Xbox.Services.Statistics.Manager.StatisticManager.g.cpp"

// WARNING: This file is automatically generated by a tool. Do not directly
// add this file to your project, as any changes you make will be lost.
// This file is a stub you can use as a starting point for your implementation.
//
// To add a copy of this file to your project:
//   1. Copy this file from its original location to the location where you store 
//      your other source files (e.g. the project root). 
//   2. Add the copied file to your project. In Visual Studio, you can use 
//      Project -> Add Existing Item.
//   3. Delete this comment and the 'static_assert' (below) from the copied file.
//      Do not modify the original file.
//
// To update an existing file in your project:
//   1. Copy the relevant changes from this file and merge them into the copy 
//      you made previously.
//    
// This assertion helps prevent accidental modification of generated files.
////////

namespace winrt::Microsoft::Xbox::Services::Statistics::Manager::implementation
{
    winrt::Microsoft::Xbox::Services::Statistics::Manager::StatisticManager StatisticManager::SingletonInstance()
    {
        throw hresult_not_implemented();
    }
    void StatisticManager::AddLocalUser(winrt::Windows::Xbox::System::User const& user)
    {
        throw hresult_not_implemented();
    }
    void StatisticManager::RemoveLocalUser(winrt::Windows::Xbox::System::User const& user)
    {
        throw hresult_not_implemented();
    }
    void StatisticManager::RequestFlushToService(winrt::Windows::Xbox::System::User const& user)
    {
        throw hresult_not_implemented();
    }
    void StatisticManager::RequestFlushToService(winrt::Windows::Xbox::System::User const& user, bool isHighPriority)
    {
        throw hresult_not_implemented();
    }
    winrt::Windows::Foundation::Collections::IVectorView<winrt::Microsoft::Xbox::Services::Statistics::Manager::StatisticEvent> StatisticManager::DoWork()
    {
        throw hresult_not_implemented();
    }
    void StatisticManager::SetStatisticNumberData(winrt::Windows::Xbox::System::User const& user, hstring const& name, double value)
    {
        throw hresult_not_implemented();
    }
    void StatisticManager::SetStatisticIntegerData(winrt::Windows::Xbox::System::User const& user, hstring const& name, int64_t value)
    {
        throw hresult_not_implemented();
    }
    void StatisticManager::SetStatisticStringData(winrt::Windows::Xbox::System::User const& user, hstring const& name, hstring const& value)
    {
        throw hresult_not_implemented();
    }
    winrt::Windows::Foundation::Collections::IVectorView<hstring> StatisticManager::GetStatisticNames(winrt::Windows::Xbox::System::User const& user)
    {
        throw hresult_not_implemented();
    }
    winrt::Microsoft::Xbox::Services::Statistics::Manager::StatisticValue StatisticManager::GetStatistic(winrt::Windows::Xbox::System::User const& user, hstring const& name)
    {
        throw hresult_not_implemented();
    }
    void StatisticManager::DeleteStatistic(winrt::Windows::Xbox::System::User const& user, hstring const& name)
    {
        throw hresult_not_implemented();
    }
    void StatisticManager::GetLeaderboard(winrt::Windows::Xbox::System::User const& user, hstring const& statName, winrt::Microsoft::Xbox::Services::Leaderboard::LeaderboardQuery const& query)
    {
        throw hresult_not_implemented();
    }
    void StatisticManager::GetSocialLeaderboard(winrt::Windows::Xbox::System::User const& user, hstring const& statName, hstring const& socialGroup, winrt::Microsoft::Xbox::Services::Leaderboard::LeaderboardQuery const& query)
    {
        throw hresult_not_implemented();
    }
}
