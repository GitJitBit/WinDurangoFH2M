#include "pch.h"
#include "Microsoft.Xbox.Services.XboxLiveContextSettings.h"
#include "Microsoft.Xbox.Services.XboxLiveContextSettings.g.cpp"

// WARNING: This file is automatically generated by a tool. Do not directly
// add this file to your project, as any changes you make will be lost.
// This file is a stub you can use as a starting point for your implementation.
//
// To add a copy of this file to your project:
//   1. Copy this file from its original location to the location where you store 
//      your other source files (e.g. the project root). 
//   2. Add the copied file to your project. In Visual Studio, you can use 
//      Project -> Add Existing Item.
//   3. Delete this comment and the 'static_assert' (below) from the copied file.
//      Do not modify the original file.
//
// To update an existing file in your project:
//   1. Copy the relevant changes from this file and merge them into the copy 
//      you made previously.
//    
// This assertion helps prevent accidental modification of generated files.
////

namespace winrt::Microsoft::Xbox::Services::implementation
{
    winrt::event_token XboxLiveContextSettings::ServiceCallRouted(winrt::Windows::Foundation::EventHandler<winrt::Microsoft::Xbox::Services::XboxServiceCallRoutedEventArgs> const& __param0)
    {
        throw hresult_not_implemented();
    }
    void XboxLiveContextSettings::ServiceCallRouted(winrt::event_token const& __param0) noexcept
    {
        throw hresult_not_implemented();
    }
    bool XboxLiveContextSettings::EnableServiceCallRoutedEvents()
    {
        throw hresult_not_implemented();
    }
    void XboxLiveContextSettings::EnableServiceCallRoutedEvents(bool value)
    {
        throw hresult_not_implemented();
    }
    winrt::Microsoft::Xbox::Services::XboxServicesDiagnosticsTraceLevel XboxLiveContextSettings::DiagnosticsTraceLevel()
    {
        throw hresult_not_implemented();
    }
    void XboxLiveContextSettings::DiagnosticsTraceLevel(winrt::Microsoft::Xbox::Services::XboxServicesDiagnosticsTraceLevel const& value)
    {
        throw hresult_not_implemented();
    }
    winrt::Windows::Foundation::TimeSpan XboxLiveContextSettings::HttpTimeout()
    {
        throw hresult_not_implemented();
    }
    void XboxLiveContextSettings::HttpTimeout(winrt::Windows::Foundation::TimeSpan const& value)
    {
        throw hresult_not_implemented();
    }
    winrt::Windows::Foundation::TimeSpan XboxLiveContextSettings::LongHttpTimeout()
    {
        throw hresult_not_implemented();
    }
    void XboxLiveContextSettings::LongHttpTimeout(winrt::Windows::Foundation::TimeSpan const& value)
    {
        throw hresult_not_implemented();
    }
    winrt::Windows::Foundation::TimeSpan XboxLiveContextSettings::HttpRetryDelay()
    {
        throw hresult_not_implemented();
    }
    void XboxLiveContextSettings::HttpRetryDelay(winrt::Windows::Foundation::TimeSpan const& value)
    {
        throw hresult_not_implemented();
    }
    winrt::Windows::Foundation::TimeSpan XboxLiveContextSettings::HttpTimeoutWindow()
    {
        throw hresult_not_implemented();
    }
    void XboxLiveContextSettings::HttpTimeoutWindow(winrt::Windows::Foundation::TimeSpan const& value)
    {
        throw hresult_not_implemented();
    }
    winrt::Windows::Foundation::TimeSpan XboxLiveContextSettings::WebsocketTimeoutWindow()
    {
        throw hresult_not_implemented();
    }
    void XboxLiveContextSettings::WebsocketTimeoutWindow(winrt::Windows::Foundation::TimeSpan const& value)
    {
        throw hresult_not_implemented();
    }
    bool XboxLiveContextSettings::UseCoreDispatcherForEventRouting()
    {
        throw hresult_not_implemented();
    }
    void XboxLiveContextSettings::UseCoreDispatcherForEventRouting(bool value)
    {
        throw hresult_not_implemented();
    }
    void XboxLiveContextSettings::DisableAssertsForXboxLiveThrottlingInDevSandboxes(winrt::Microsoft::Xbox::Services::XboxLiveContextThrottleSetting const& setting)
    {
        throw hresult_not_implemented();
    }
    void XboxLiveContextSettings::DisableAssertsForMaximumNumberOfWebsocketsActivated(winrt::Microsoft::Xbox::Services::XboxLiveContextRecommendedSetting const& setting)
    {
        throw hresult_not_implemented();
    }
}
