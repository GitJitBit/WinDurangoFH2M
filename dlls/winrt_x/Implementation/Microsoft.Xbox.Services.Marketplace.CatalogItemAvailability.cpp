#include "pch.h"
#include "Microsoft.Xbox.Services.Marketplace.CatalogItemAvailability.h"
#include "Microsoft.Xbox.Services.Marketplace.CatalogItemAvailability.g.cpp"

// WARNING: This file is automatically generated by a tool. Do not directly
// add this file to your project, as any changes you make will be lost.
// This file is a stub you can use as a starting point for your implementation.
//
// To add a copy of this file to your project:
//   1. Copy this file from its original location to the location where you store 
//      your other source files (e.g. the project root). 
//   2. Add the copied file to your project. In Visual Studio, you can use 
//      Project -> Add Existing Item.
//   3. Delete this comment and the 'static_assert' (below) from the copied file.
//      Do not modify the original file.
//
// To update an existing file in your project:
//   1. Copy the relevant changes from this file and merge them into the copy 
//      you made previously.
//    
// This assertion helps prevent accidental modification of generated files.
////////

namespace winrt::Microsoft::Xbox::Services::Marketplace::implementation
{
    hstring CatalogItemAvailability::ContentId()
    {
        throw hresult_not_implemented();
    }
    winrt::Windows::Foundation::Collections::IVectorView<hstring> CatalogItemAvailability::AcceptablePaymentInstrumentTypes()
    {
        throw hresult_not_implemented();
    }
    hstring CatalogItemAvailability::AvailabilityTitle()
    {
        throw hresult_not_implemented();
    }
    hstring CatalogItemAvailability::AvailabilityDescription()
    {
        throw hresult_not_implemented();
    }
    hstring CatalogItemAvailability::CurrencyCode()
    {
        throw hresult_not_implemented();
    }
    hstring CatalogItemAvailability::DisplayPrice()
    {
        throw hresult_not_implemented();
    }
    hstring CatalogItemAvailability::DisplayListPrice()
    {
        throw hresult_not_implemented();
    }
    hstring CatalogItemAvailability::DistributionType()
    {
        throw hresult_not_implemented();
    }
    bool CatalogItemAvailability::IsPurchasable()
    {
        throw hresult_not_implemented();
    }
    double CatalogItemAvailability::ListPrice()
    {
        throw hresult_not_implemented();
    }
    double CatalogItemAvailability::Price()
    {
        throw hresult_not_implemented();
    }
    uint32_t CatalogItemAvailability::ConsumableQuantity()
    {
        throw hresult_not_implemented();
    }
    hstring CatalogItemAvailability::PromotionalText()
    {
        throw hresult_not_implemented();
    }
    hstring CatalogItemAvailability::SignedOffer()
    {
        throw hresult_not_implemented();
    }
    hstring CatalogItemAvailability::OfferId()
    {
        throw hresult_not_implemented();
    }
    hstring CatalogItemAvailability::OfferDisplayDataJson()
    {
        throw hresult_not_implemented();
    }
}
