#pragma once
#include "Windows.Kinect.CoordinateMapper.g.h"

// WARNING: This file is automatically generated by a tool. Do not directly
// add this file to your project, as any changes you make will be lost.
// This file is a stub you can use as a starting point for your implementation.
//
// To add a copy of this file to your project:
//   1. Copy this file from its original location to the location where you store 
//      your other source files (e.g. the project root). 
//   2. Add the copied file to your project. In Visual Studio, you can use 
//      Project -> Add Existing Item.
//   3. Delete this comment and the 'static_assert' (below) from the copied file.
//      Do not modify the original file.
//
// To update an existing file in your project:
//   1. Copy the relevant changes from this file and merge them into the copy 
//      you made previously.
//    
// This assertion helps prevent accidental modification of generated files.
//

namespace winrt::Windows::Kinect::implementation
{
    struct CoordinateMapper : CoordinateMapperT<CoordinateMapper>
    {
        CoordinateMapper() = default;

        winrt::Windows::Kinect::DepthSpacePoint MapCameraPointToDepthSpace(winrt::Windows::Kinect::CameraSpacePoint const& cameraPoint);
        winrt::Windows::Kinect::ColorSpacePoint MapCameraPointToColorSpace(winrt::Windows::Kinect::CameraSpacePoint const& cameraPoint);
        winrt::Windows::Kinect::CameraSpacePoint MapDepthPointToCameraSpace(winrt::Windows::Kinect::DepthSpacePoint const& depthPoint, uint16_t depth);
        winrt::Windows::Kinect::ColorSpacePoint MapDepthPointToColorSpace(winrt::Windows::Kinect::DepthSpacePoint const& depthPoint, uint16_t depth);
        void MapDepthFrameToCameraSpace(array_view<uint16_t const> depthFrameData, array_view<winrt::Windows::Kinect::CameraSpacePoint> cameraSpacePoints);
        void MapDepthFrameToColorSpace(array_view<uint16_t const> depthFrameData, array_view<winrt::Windows::Kinect::ColorSpacePoint> colorSpacePoints);
        void MapDepthFrameToCameraSpaceUsingIBuffer(winrt::Windows::Storage::Streams::IBuffer const& depthFrameData, array_view<winrt::Windows::Kinect::CameraSpacePoint> cameraSpacePoints);
        void MapDepthFrameToColorSpaceUsingIBuffer(winrt::Windows::Storage::Streams::IBuffer const& depthFrameData, array_view<winrt::Windows::Kinect::ColorSpacePoint> colorSpacePoints);
        void MapColorFrameToDepthSpace(array_view<uint16_t const> depthFrameData, array_view<winrt::Windows::Kinect::DepthSpacePoint> depthSpacePoints);
        void MapColorFrameToCameraSpace(array_view<uint16_t const> depthFrameData, array_view<winrt::Windows::Kinect::CameraSpacePoint> cameraSpacePoints);
        void MapColorFrameToDepthSpaceUsingIBuffer(winrt::Windows::Storage::Streams::IBuffer const& depthFrameData, array_view<winrt::Windows::Kinect::DepthSpacePoint> depthSpacePoints);
        void MapColorFrameToCameraSpaceUsingIBuffer(winrt::Windows::Storage::Streams::IBuffer const& depthFrameData, array_view<winrt::Windows::Kinect::CameraSpacePoint> cameraSpacePoints);
        com_array<winrt::Windows::Foundation::Point> GetDepthFrameToCameraSpaceTable();
    };
}
