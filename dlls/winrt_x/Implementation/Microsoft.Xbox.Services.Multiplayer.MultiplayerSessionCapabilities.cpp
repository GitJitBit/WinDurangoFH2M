#include "pch.h"
#include "Microsoft.Xbox.Services.Multiplayer.MultiplayerSessionCapabilities.h"
#include "Microsoft.Xbox.Services.Multiplayer.MultiplayerSessionCapabilities.g.cpp"

// WARNING: This file is automatically generated by a tool. Do not directly
// add this file to your project, as any changes you make will be lost.
// This file is a stub you can use as a starting point for your implementation.
//
// To add a copy of this file to your project:
//   1. Copy this file from its original location to the location where you store 
//      your other source files (e.g. the project root). 
//   2. Add the copied file to your project. In Visual Studio, you can use 
//      Project -> Add Existing Item.
//   3. Delete this comment and the 'static_assert' (below) from the copied file.
//      Do not modify the original file.
//
// To update an existing file in your project:
//   1. Copy the relevant changes from this file and merge them into the copy 
//      you made previously.
//    
// This assertion helps prevent accidental modification of generated files.
////////

namespace winrt::Microsoft::Xbox::Services::Multiplayer::implementation
{
    bool MultiplayerSessionCapabilities::Connectivity()
    {
        throw hresult_not_implemented();
    }
    void MultiplayerSessionCapabilities::Connectivity(bool value)
    {
        throw hresult_not_implemented();
    }
    bool MultiplayerSessionCapabilities::SuppressPresenceActivityCheck()
    {
        throw hresult_not_implemented();
    }
    void MultiplayerSessionCapabilities::SuppressPresenceActivityCheck(bool value)
    {
        throw hresult_not_implemented();
    }
    bool MultiplayerSessionCapabilities::Gameplay()
    {
        throw hresult_not_implemented();
    }
    void MultiplayerSessionCapabilities::Gameplay(bool value)
    {
        throw hresult_not_implemented();
    }
    bool MultiplayerSessionCapabilities::Large()
    {
        throw hresult_not_implemented();
    }
    void MultiplayerSessionCapabilities::Large(bool value)
    {
        throw hresult_not_implemented();
    }
    bool MultiplayerSessionCapabilities::ConnectionRequiredForActiveMembers()
    {
        throw hresult_not_implemented();
    }
    void MultiplayerSessionCapabilities::ConnectionRequiredForActiveMembers(bool value)
    {
        throw hresult_not_implemented();
    }
    bool MultiplayerSessionCapabilities::UserAuthorizationStyle()
    {
        throw hresult_not_implemented();
    }
    void MultiplayerSessionCapabilities::UserAuthorizationStyle(bool value)
    {
        throw hresult_not_implemented();
    }
    bool MultiplayerSessionCapabilities::Crossplay()
    {
        throw hresult_not_implemented();
    }
    void MultiplayerSessionCapabilities::Crossplay(bool value)
    {
        throw hresult_not_implemented();
    }
    bool MultiplayerSessionCapabilities::Team()
    {
        throw hresult_not_implemented();
    }
    void MultiplayerSessionCapabilities::Team(bool value)
    {
        throw hresult_not_implemented();
    }
    bool MultiplayerSessionCapabilities::Arbitration()
    {
        throw hresult_not_implemented();
    }
    void MultiplayerSessionCapabilities::Arbitration(bool value)
    {
        throw hresult_not_implemented();
    }
    bool MultiplayerSessionCapabilities::Searchable()
    {
        throw hresult_not_implemented();
    }
    void MultiplayerSessionCapabilities::Searchable(bool value)
    {
        throw hresult_not_implemented();
    }
    bool MultiplayerSessionCapabilities::HasOwners()
    {
        throw hresult_not_implemented();
    }
    void MultiplayerSessionCapabilities::HasOwners(bool value)
    {
        throw hresult_not_implemented();
    }
}
