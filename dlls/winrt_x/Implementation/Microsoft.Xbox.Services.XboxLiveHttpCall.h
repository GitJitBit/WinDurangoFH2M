#pragma once
#include "Microsoft.Xbox.Services.XboxLiveHttpCall.g.h"

// WARNING: This file is automatically generated by a tool. Do not directly
// add this file to your project, as any changes you make will be lost.
// This file is a stub you can use as a starting point for your implementation.
//
// To add a copy of this file to your project:
//   1. Copy this file from its original location to the location where you store 
//      your other source files (e.g. the project root). 
//   2. Add the copied file to your project. In Visual Studio, you can use 
//      Project -> Add Existing Item.
//   3. Delete this comment and the 'static_assert' (below) from the copied file.
//      Do not modify the original file.
//
// To update an existing file in your project:
//   1. Copy the relevant changes from this file and merge them into the copy 
//      you made previously.
//    
// This assertion helps prevent accidental modification of generated files.
////

namespace winrt::Microsoft::Xbox::Services::implementation
{
    struct XboxLiveHttpCall : XboxLiveHttpCallT<XboxLiveHttpCall>
    {
        XboxLiveHttpCall() = default;

        static winrt::Microsoft::Xbox::Services::XboxLiveHttpCall CreateXboxLiveHttpCall(winrt::Microsoft::Xbox::Services::XboxLiveContextSettings const& settings, hstring const& httpMethod, hstring const& serverName, hstring const& pathQueryFragment);
        winrt::Windows::Foundation::IAsyncOperation<winrt::Microsoft::Xbox::Services::XboxLiveHttpCallResponse> GetResponseWithAuth(winrt::Windows::Xbox::System::User user, winrt::Microsoft::Xbox::Services::HttpCallResponseBodyType httpCallResponseBodyType);
        winrt::Windows::Foundation::IAsyncOperation<winrt::Microsoft::Xbox::Services::XboxLiveHttpCallResponse> GetResponseWithoutAuth(winrt::Microsoft::Xbox::Services::HttpCallResponseBodyType httpCallResponseBodyType);
        void SetRequestBody(hstring const& value);
        void SetRequestBodyArray(array_view<uint8_t const> requestBodyArray);
        void SetCustomHeader(hstring const& headerName, hstring const& headerValue);
        bool RetryAllowed();
        void RetryAllowed(bool value);
        hstring ContentTypeHeaderValue();
        void ContentTypeHeaderValue(hstring const& value);
        hstring ContractVersionHeaderValue();
        void ContractVersionHeaderValue(hstring const& value);
        hstring ServerName();
        hstring PathQueryFragment();
        hstring HttpMethod();
    };
}
namespace winrt::Microsoft::Xbox::Services::factory_implementation
{
    struct XboxLiveHttpCall : XboxLiveHttpCallT<XboxLiveHttpCall, implementation::XboxLiveHttpCall>
    {
    };
}
