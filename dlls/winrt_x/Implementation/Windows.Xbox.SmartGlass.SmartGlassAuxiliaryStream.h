#pragma once
#include "Windows.Xbox.SmartGlass.SmartGlassAuxiliaryStream.g.h"

// WARNING: This file is automatically generated by a tool. Do not directly
// add this file to your project, as any changes you make will be lost.
// This file is a stub you can use as a starting point for your implementation.
//
// To add a copy of this file to your project:
//   1. Copy this file from its original location to the location where you store 
//      your other source files (e.g. the project root). 
//   2. Add the copied file to your project. In Visual Studio, you can use 
//      Project -> Add Existing Item.
//   3. Delete this comment and the 'static_assert' (below) from the copied file.
//      Do not modify the original file.
//
// To update an existing file in your project:
//   1. Copy the relevant changes from this file and merge them into the copy 
//      you made previously.
//    
// This assertion helps prevent accidental modification of generated files.
//static_assert(false, "This file is generated by a tool and will be overwritten. Open this error and view the comment for assistance.");

namespace winrt::Windows::Xbox::SmartGlass::implementation
{
    struct SmartGlassAuxiliaryStream : SmartGlassAuxiliaryStreamT<SmartGlassAuxiliaryStream>
    {
        SmartGlassAuxiliaryStream() = default;

        void Open();
        void Close();
        winrt::event_token OnConnect(winrt::Windows::Foundation::TypedEventHandler<winrt::Windows::Xbox::SmartGlass::SmartGlassAuxiliaryStream, winrt::Windows::Foundation::IInspectable> const& handler);
        void OnConnect(winrt::event_token const& token) noexcept;
        winrt::event_token OnReceive(winrt::Windows::Foundation::TypedEventHandler<winrt::Windows::Xbox::SmartGlass::SmartGlassAuxiliaryStream, winrt::Windows::Xbox::SmartGlass::SmartGlassAuxiliaryStreamReadStats> const& handler);
        void OnReceive(winrt::event_token const& token) noexcept;
        winrt::event_token OnSend(winrt::Windows::Foundation::TypedEventHandler<winrt::Windows::Xbox::SmartGlass::SmartGlassAuxiliaryStream, winrt::Windows::Xbox::SmartGlass::SmartGlassAuxiliaryStreamWriteStats> const& handler);
        void OnSend(winrt::event_token const& token) noexcept;
        winrt::event_token OnError(winrt::Windows::Foundation::TypedEventHandler<winrt::Windows::Xbox::SmartGlass::SmartGlassAuxiliaryStream, int32_t> const& handler);
        void OnError(winrt::event_token const& token) noexcept;
    };
}
