#include "pch.h"
#include "Windows.Kinect.CoordinateMapper.h"
#include "Windows.Kinect.CoordinateMapper.g.cpp"

// WARNING: This file is automatically generated by a tool. Do not directly
// add this file to your project, as any changes you make will be lost.
// This file is a stub you can use as a starting point for your implementation.
//
// To add a copy of this file to your project:
//   1. Copy this file from its original location to the location where you store 
//      your other source files (e.g. the project root). 
//   2. Add the copied file to your project. In Visual Studio, you can use 
//      Project -> Add Existing Item.
//   3. Delete this comment and the 'static_assert' (below) from the copied file.
//      Do not modify the original file.
//
// To update an existing file in your project:
//   1. Copy the relevant changes from this file and merge them into the copy 
//      you made previously.
//    
// This assertion helps prevent accidental modification of generated files.
//

namespace winrt::Windows::Kinect::implementation
{
    winrt::Windows::Kinect::DepthSpacePoint CoordinateMapper::MapCameraPointToDepthSpace(winrt::Windows::Kinect::CameraSpacePoint const& cameraPoint)
    {
        throw hresult_not_implemented();
    }
    winrt::Windows::Kinect::ColorSpacePoint CoordinateMapper::MapCameraPointToColorSpace(winrt::Windows::Kinect::CameraSpacePoint const& cameraPoint)
    {
        throw hresult_not_implemented();
    }
    winrt::Windows::Kinect::CameraSpacePoint CoordinateMapper::MapDepthPointToCameraSpace(winrt::Windows::Kinect::DepthSpacePoint const& depthPoint, uint16_t depth)
    {
        throw hresult_not_implemented();
    }
    winrt::Windows::Kinect::ColorSpacePoint CoordinateMapper::MapDepthPointToColorSpace(winrt::Windows::Kinect::DepthSpacePoint const& depthPoint, uint16_t depth)
    {
        throw hresult_not_implemented();
    }
    void CoordinateMapper::MapDepthFrameToCameraSpace(array_view<uint16_t const> depthFrameData, array_view<winrt::Windows::Kinect::CameraSpacePoint> cameraSpacePoints)
    {
        throw hresult_not_implemented();
    }
    void CoordinateMapper::MapDepthFrameToColorSpace(array_view<uint16_t const> depthFrameData, array_view<winrt::Windows::Kinect::ColorSpacePoint> colorSpacePoints)
    {
        throw hresult_not_implemented();
    }
    void CoordinateMapper::MapDepthFrameToCameraSpaceUsingIBuffer(winrt::Windows::Storage::Streams::IBuffer const& depthFrameData, array_view<winrt::Windows::Kinect::CameraSpacePoint> cameraSpacePoints)
    {
        throw hresult_not_implemented();
    }
    void CoordinateMapper::MapDepthFrameToColorSpaceUsingIBuffer(winrt::Windows::Storage::Streams::IBuffer const& depthFrameData, array_view<winrt::Windows::Kinect::ColorSpacePoint> colorSpacePoints)
    {
        throw hresult_not_implemented();
    }
    void CoordinateMapper::MapColorFrameToDepthSpace(array_view<uint16_t const> depthFrameData, array_view<winrt::Windows::Kinect::DepthSpacePoint> depthSpacePoints)
    {
        throw hresult_not_implemented();
    }
    void CoordinateMapper::MapColorFrameToCameraSpace(array_view<uint16_t const> depthFrameData, array_view<winrt::Windows::Kinect::CameraSpacePoint> cameraSpacePoints)
    {
        throw hresult_not_implemented();
    }
    void CoordinateMapper::MapColorFrameToDepthSpaceUsingIBuffer(winrt::Windows::Storage::Streams::IBuffer const& depthFrameData, array_view<winrt::Windows::Kinect::DepthSpacePoint> depthSpacePoints)
    {
        throw hresult_not_implemented();
    }
    void CoordinateMapper::MapColorFrameToCameraSpaceUsingIBuffer(winrt::Windows::Storage::Streams::IBuffer const& depthFrameData, array_view<winrt::Windows::Kinect::CameraSpacePoint> cameraSpacePoints)
    {
        throw hresult_not_implemented();
    }
    com_array<winrt::Windows::Foundation::Point> CoordinateMapper::GetDepthFrameToCameraSpaceTable()
    {
        throw hresult_not_implemented();
    }
}
