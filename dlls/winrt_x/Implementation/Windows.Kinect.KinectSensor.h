#pragma once
#include "Windows.Kinect.KinectSensor.g.h"

// WARNING: This file is automatically generated by a tool. Do not directly
// add this file to your project, as any changes you make will be lost.
// This file is a stub you can use as a starting point for your implementation.
//
// To add a copy of this file to your project:
//   1. Copy this file from its original location to the location where you store 
//      your other source files (e.g. the project root). 
//   2. Add the copied file to your project. In Visual Studio, you can use 
//      Project -> Add Existing Item.
//   3. Delete this comment and the 'static_assert' (below) from the copied file.
//      Do not modify the original file.
//
// To update an existing file in your project:
//   1. Copy the relevant changes from this file and merge them into the copy 
//      you made previously.
//    
// This assertion helps prevent accidental modification of generated files.
//

namespace winrt::Windows::Kinect::implementation
{
    struct KinectSensor : KinectSensorT<KinectSensor>
    {
        KinectSensor() = default;

        static winrt::Windows::Kinect::KinectSensor GetDefault();
        static winrt::Windows::Foundation::Collections::IObservableMap<hstring, winrt::Windows::Kinect::KinectSensor> Sensors();
        winrt::event_token IsPausedChanged(winrt::Windows::Foundation::TypedEventHandler<winrt::Windows::Kinect::KinectSensor, winrt::Windows::Kinect::IsPausedChangedEventArgs> const& value);
        void IsPausedChanged(winrt::event_token const& token) noexcept;
        void Open();
        void Close();
        bool IsOpen();
        bool IsPaused();
        winrt::Windows::Kinect::ColorFrameSource ColorFrameSource();
        winrt::Windows::Kinect::DepthFrameSource DepthFrameSource();
        winrt::Windows::Kinect::BodyFrameSource BodyFrameSource();
        winrt::Windows::Kinect::BodyIndexFrameSource BodyIndexFrameSource();
        winrt::Windows::Kinect::InfraredFrameSource InfraredFrameSource();
        winrt::Windows::Kinect::AudioSource AudioSource();
        winrt::Windows::Kinect::MultiSourceFrameReader OpenMultiSourceFrameReader(winrt::Windows::Kinect::FrameSourceTypes const& enabledFrameSourceTypes);
        winrt::Windows::Kinect::CoordinateMapper CoordinateMapper();
        hstring UniqueKinectId();
    };
}
namespace winrt::Windows::Kinect::factory_implementation
{
    struct KinectSensor : KinectSensorT<KinectSensor, implementation::KinectSensor>
    {
    };
}
