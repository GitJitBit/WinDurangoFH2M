#pragma once
#include "Windows.Xbox.Networking.SecureDeviceAssociationTemplate.g.h"

// WARNING: This file is automatically generated by a tool. Do not directly
// add this file to your project, as any changes you make will be lost.
// This file is a stub you can use as a starting point for your implementation.
//
// To add a copy of this file to your project:
//   1. Copy this file from its original location to the location where you store 
//      your other source files (e.g. the project root). 
//   2. Add the copied file to your project. In Visual Studio, you can use 
//      Project -> Add Existing Item.
//   3. Delete this comment and the 'static_assert' (below) from the copied file.
//      Do not modify the original file.
//
// To update an existing file in your project:
//   1. Copy the relevant changes from this file and merge them into the copy 
//      you made previously.
//    
// This assertion helps prevent accidental modification of generated files.
//////////

namespace winrt::Windows::Xbox::Networking::implementation
{
    struct SecureDeviceAssociationTemplate : SecureDeviceAssociationTemplateT<SecureDeviceAssociationTemplate>
    {
        SecureDeviceAssociationTemplate() = default;

        static winrt::Windows::Xbox::Networking::SecureDeviceAssociationTemplate GetTemplateByName(hstring const& name);
        static winrt::Windows::Foundation::Collections::IVectorView<winrt::Windows::Xbox::Networking::SecureDeviceAssociationTemplate> Templates();
        winrt::event_token AssociationIncoming(winrt::Windows::Foundation::TypedEventHandler<winrt::Windows::Xbox::Networking::SecureDeviceAssociationTemplate, winrt::Windows::Xbox::Networking::SecureDeviceAssociationIncomingEventArgs> const& handler);
        void AssociationIncoming(winrt::event_token const& token) noexcept;
        winrt::Windows::Foundation::IAsyncOperation<winrt::Windows::Xbox::Networking::SecureDeviceAssociation> CreateAssociationAsync(winrt::Windows::Xbox::Networking::SecureDeviceAddress secureDeviceAddress, winrt::Windows::Xbox::Networking::CreateSecureDeviceAssociationBehavior behavior);
        winrt::Windows::Foundation::IAsyncOperation<winrt::Windows::Xbox::Networking::SecureDeviceAssociation> CreateAssociationForPortsAsync(winrt::Windows::Xbox::Networking::SecureDeviceAddress secureDeviceAddress, winrt::Windows::Xbox::Networking::CreateSecureDeviceAssociationBehavior behavior, hstring initiatorPort, hstring acceptorPort);
        winrt::Windows::Foundation::IAsyncOperation<winrt::Windows::Storage::Streams::IBuffer> CreateCertificateRequestAsync(hstring subjectName);
        winrt::Windows::Foundation::IAsyncAction InstallCertificateAsync(winrt::Windows::Storage::Streams::IBuffer certificateBuffer);
        hstring Name();
        winrt::Windows::Xbox::Networking::SecureDeviceSocketDescription InitiatorSocketDescription();
        winrt::Windows::Xbox::Networking::SecureDeviceSocketDescription AcceptorSocketDescription();
        winrt::Windows::Xbox::Networking::SecureDeviceAssociationUsage AllowedUsages();
        hstring RelyingParty();
        winrt::Windows::Foundation::Collections::IVectorView<winrt::Windows::Xbox::Networking::ProtocolParserDescription> ProtocolParserDescriptions();
        winrt::Windows::Foundation::Collections::IVectorView<winrt::Windows::Xbox::Networking::QualityOfServiceMetric> QualityOfServiceMetricPathPriorities();
        winrt::Windows::Xbox::Networking::MultiplayerSessionRequirement MultiplayerSessionRequirement();
        winrt::Windows::Foundation::Collections::IVectorView<winrt::Windows::Xbox::Networking::SecureDeviceAssociation> Associations();
    };
}
namespace winrt::Windows::Xbox::Networking::factory_implementation
{
    struct SecureDeviceAssociationTemplate : SecureDeviceAssociationTemplateT<SecureDeviceAssociationTemplate, implementation::SecureDeviceAssociationTemplate>
    {
    };
}
