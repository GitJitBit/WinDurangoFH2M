#pragma once
#include "Windows.Xbox.Speech.Recognition.SpeechGrammarBuilderRuleSet.g.h"

// WARNING: This file is automatically generated by a tool. Do not directly
// add this file to your project, as any changes you make will be lost.
// This file is a stub you can use as a starting point for your implementation.
//
// To add a copy of this file to your project:
//   1. Copy this file from its original location to the location where you store 
//      your other source files (e.g. the project root). 
//   2. Add the copied file to your project. In Visual Studio, you can use 
//      Project -> Add Existing Item.
//   3. Delete this comment and the 'static_assert' (below) from the copied file.
//      Do not modify the original file.
//
// To update an existing file in your project:
//   1. Copy the relevant changes from this file and merge them into the copy 
//      you made previously.
//    
// This assertion helps prevent accidental modification of generated files.


namespace winrt::Windows::Xbox::Speech::Recognition::implementation
{
    struct SpeechGrammarBuilderRuleSet : SpeechGrammarBuilderRuleSetT<SpeechGrammarBuilderRuleSet>
    {
        SpeechGrammarBuilderRuleSet() = default;

        winrt::Windows::Foundation::Collections::IIterator<winrt::Windows::Foundation::Collections::IKeyValuePair<hstring, winrt::Windows::Xbox::Speech::Recognition::ISpeechRule>> First();
        winrt::Windows::Xbox::Speech::Recognition::ISpeechRule Lookup(hstring const& key);
        uint32_t Size();
        bool HasKey(hstring const& key);
        void Split(winrt::Windows::Foundation::Collections::IMapView<hstring, winrt::Windows::Xbox::Speech::Recognition::ISpeechRule>& first, winrt::Windows::Foundation::Collections::IMapView<hstring, winrt::Windows::Xbox::Speech::Recognition::ISpeechRule>& second);
        winrt::Windows::Xbox::Speech::Recognition::SpeechChoiceRule AddChoiceRule(hstring const& key, winrt::Windows::Foundation::Collections::IIterable<hstring> const& phrases);
        winrt::Windows::Xbox::Speech::Recognition::SpeechChoiceRule AddChoiceRule(hstring const& key);
        winrt::Windows::Xbox::Speech::Recognition::SpeechSequenceRule AddSequenceRule(hstring const& key, winrt::Windows::Foundation::Collections::IIterable<winrt::Windows::Xbox::Speech::Recognition::ISpeechRuleItem> const& items);
        winrt::Windows::Xbox::Speech::Recognition::SpeechSequenceRule AddSequenceRule(hstring const& key);
        winrt::Windows::Xbox::Speech::Recognition::SpeechGraphRule AddGraphRule(hstring const& key);
        void Clear();
        winrt::Windows::Xbox::Speech::Recognition::ISpeechRule Remove(hstring const& key);
    };
}
